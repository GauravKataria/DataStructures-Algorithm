Tree :

Y Tree
- hierarchy
- search/access fast than linklist slow than array 
- insertion/deletion fast then array slow than unordered list
- like linklist tree dont have fixed length

Application
- Manipulate hierarchical data
- Make information easy to search (tree traversal)
- Manipulate sorted lists of data
- As a workflow for compositing digital images for visual effects
- Router algorithms
- Form of a multi-stage decision-making (see business chess)

Properties :

(1) L = (k - 1)*I + 1
Where L = Number of leaf nodes
      I = Number of internal nodes 
	  K = K-ary tree

(2) Number of leaf nodes is always one more than nodes with two children.
L = T + 1
Where L = Number of leaf nodes
      T = Number of internal nodes with two children 

(3) The maximum number of nodes at level ‘l’ of a binary tree is 2l-1

(4) Maximum number of nodes in a binary tree of height ‘h’ is 2h – 1

(5) In a Binary Tree with N nodes, minimum possible height or minimum number of levels is  Log2(N+1)

(6) A Binary Tree with L leaves has at least Log2L + 1 levels

(7) In Binary tree, number of leaf nodes is always one more than nodes with two children

Type of Binary tree :

1) Full (leaf 0 or 2)
2) Complete (no right filled without left leaf and b4 increasing level upper lever must b filled)
3) Perfect (leaf 2 for ever level or 0)

Q. How many different Unlabeled Binary Trees can be there with n nodes?
Catalan Number : T(n) = (2n)! / (n+1)!n!
